  ★ 배열, 객체
  - 배열, 객체를 useState로 변경할 경우 전개연산자를 사용해야 함
		예시) _setArr([..._arr, 홍길동]) // _arr란 변수에 '홍길동'을 추가

  - useState 훅스는 참조가 아닌 실제로 값이 변경될 경우만 화면을 갱신한다 
    따라서 배열과 객체를 복사할 경우에는 반드시 전개연산자를 사용해야 한다
    참조) let arrCopy = _arr
    복사) let arrCopy = [..._arr]

  - 리액트에서 배열 추가 예시
    예시1) let arrCopy = [..._arr] // 기존의 배열을 arrCopy에서 복사
    arrCopy.push(name) // 복사된 배열에 이름을 추가
    _setArr(arrCopy) // arr스테이트를 arrCopy로 재변경
    예시2) _setArr([..._arr, 홍길동]) // arr란 변수에 '홍길동'을 추가

  - 배열을 순환하여 출력
    배열 형태로 리턴이 되어야 출력 가능
    
    잘못된 출력 형태 예시)
    arr = [
      {
        name: '홍', age: 12
      },
      {
        name: '김', age: 21
      }
    ]
    {arr} // 배열 전체 출력시 에러발생

    arr = [1, 2, 3]
    arr.forEach(()=>{ // 실행결과 1, 2, 3 이라는 값을 차례대로 리턴
      return v
    })

    올바른 출력 형태 예시)
    arr.map((v)=>{ // 실행결과 -> [1,2,3] 이라는 배열을 리턴
      return v
    })

  - 배열 안에 객체가 존재할 경우 배열을 출력할 수 없다
