■ create-react-app
  ● npm 사용시
    ▶설치 : npm i -g create-react-app
    ▶언인스톨 : npm uninstall -g create-react-app
    ▶확인 : create-react-app -V (v대문자) 
    ▶개발환경설치 : 해당폴더로 이동후 create-react-app .
    ▶실행 : npm run start
    ▶빌드 : npm run build 
    ▶빌드테스트
      npm install -g serve 또는 npx serve -s build
    ▶배포 :
      - root폴더에 업로드할 경우
        build폴더안의 프로젝트 파일을 root경로에 업로드
      - 특정폴더에 프로젝트를 업로드할 경우 :
        (!라우터 라이브러리를 사용하지 않을 경우만) 
        build폴더안의 asset-manifest.json 파일의 /static경로를 상대경로로 변경 (예시: ./static)
        build폴더안의 index.html파일의 link태그와 script태그의 /static경로를 상대경로로 변경 (예시: ./static)
  ● yarn 사용시
    ▶개발환경설치 : yarn create react-app .
    ▶개발환경설치 : yarn create react-app .
    ▶실행 : yarn start
    ▶빌드 : yarn build
    ▶yarn test
    
  ● 앱구조
    public폴더 : index.html  외 삭제
    src폴더 : index.js , App.jsx 외 삭제

    ▶ index.html 초기화
      <!DOCTYPE html>
      <html lang="ko">
        <head>
          <meta charset="utf-8" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <meta name="theme-color" content="#000000" />
          <title>React App</title>
        </head>
        <body>
          <div id="root"></div>
        </body>
      </html>

    ▶ index.js 초기화
      /* eslint-disable */
      import React from 'react';
      import ReactDOM from 'react-dom';
      import App from './App';

      ReactDOM.render(
        <>
          <App />
        </>,
        document.getElementById('root')
      );

    ▶ App.js(jsx) 초기화
      /* eslint-disable */
      const App = () => {
        return (
          <>
            app
          </>
        );
      };
      export default App;

  ● 파일 초기화 후 public폴더와 src폴더는 별도로 백업 
    (다수의 프로젝트 진행시 프로젝트를 추가로 생성할 필요가 없어짐)

  ● eslint warning 없애기
    /* eslint-disable */